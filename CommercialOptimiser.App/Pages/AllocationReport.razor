@page "/"

@using System.Diagnostics.Eventing.Reader
@using CommercialOptimiser.App.ViewModels
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<AllocationReport> Resources
@inject IAllocationReportViewModel ViewModel
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">

@if (ViewModel.UserReportBreaks == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <header class="noprint">
        <h1>@Resources["Title"]</h1>

        <p class="very-small" />

        <div align="center">
            <button class="btn btn-primary" @onclick="() => NavigateToCommercialSelection(false)">
                @Resources["SelectCommercials"]
            </button>
        </div>
    </header>

    <p class="very-small" />

    <div class="break-table">
        <table class="w3-table-all">
            <thead>
                <tr class="w3-green">
                    <th>@Resources["BreakTitle"]</th>
                    <th>@Resources["CommercialTitle"]</th>
                    <th class="numeric">@Resources["RatingTitle"]</th>
                </tr>
            </thead>

            @foreach (var userReportBreak in ViewModel.UserReportBreaks)
            {
                @for(int i = 0; i < userReportBreak.UserReportBreakCommercials.Count; i++) 
                {
                    <tr>
                        @if(i == 0)
                        { 
                            <td>@userReportBreak.BreakTitle</td>
                        }
                        else
                        {
                            <td></td>
                        }
                        <td>@userReportBreak.UserReportBreakCommercials[i].CommercialTitle</td>
                        <td class="numeric">@userReportBreak.UserReportBreakCommercials[i].Rating</td>
                    </tr>
                }
            }

            <tfoot>
                <tr>
                    <td />
                    <td />
                    <td class="numeric">
                        @Resources["Total"] @ViewModel.UserReportBreaksTotal
                    </td>
                </tr>
            </tfoot>
        </table>
    </div>

    <footer class="noprint">
        <p class="very-small" />

        <div align="center">
            <button class="btn btn-primary" @onclick="PrintAsync">
                @Resources["Print"]
            </button>
        </div>
    </footer>
}

@code {

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            try
            {
                await ViewModel.InitializeAsync();
            }
            catch (Exception)
            {
                //Problem communicating with API
                NavigationManager.NavigateTo("error");
                return;
            }

            if (ViewModel.UserReportBreaks == null ||
                !ViewModel.UserReportBreaks.Any())
                NavigateToCommercialSelection(true);
            else
                StateHasChanged();
        }
    }

    private void NavigateToCommercialSelection(bool preventCancel)
    {
        NavigationManager.NavigateTo("commercials/" + preventCancel.ToString());
    }

    private async Task PrintAsync()
    {
        await JsRuntime.InvokeVoidAsync("window.print", null);
    }
}