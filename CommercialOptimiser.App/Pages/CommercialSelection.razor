@page "/commercials"

@using CommercialOptimiser.App.ViewModels
@using Microsoft.Extensions.Localization
@using CommercialOptimiser.Core.Models
@inject IStringLocalizer<CommercialSelection> Resources
@inject ICommercialSelectionViewModel ViewModel
@inject NavigationManager NavigationManager

<h1>@Resources["Title"]</h1>

@if (ViewModel.Commercials == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                @string.Format(Resources["CommercialsSelected"], 
                    ViewModel.SelectedCommercialCount,
                    ViewModel.BreakCapacity)
            </tr>
            <tr>
                <td>
                    @Resources["SelectAll"]
                    <input type="checkbox"
                           @bind=@ViewModel.AllSelected>
                </td>
            </tr>
        </thead>
        <tbody>
            @foreach (var commercial in ViewModel.Commercials)
            {
                <tr>
                    <td>@commercial.Commercial.Title</td>
                    <td>
                        <input type="checkbox"
                               id=@commercial.Commercial.Id
                               @bind=@commercial.Checked>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td>
                    <button class="btn btn-primary" @onclick="Cancel">
                        @Resources["Cancel"]
                    </button>
                </td>
                <td>
                    <button class="btn btn-primary" @onclick="OptimiseCommercialAllocationAsync">
                        @Resources["OptimiseCommercialAllocation"]
                    </button>
                </td>
            </tr>
        </tfoot>
    </table>

   
}

@code {
    protected override async Task OnInitializedAsync()
    {
        await ViewModel.InitializeAsync();
    }

    private async Task OptimiseCommercialAllocationAsync()
    {
        try
        {
            if (!await ViewModel.OptimiseCommercialAllocationAsync())
            {
                //Not enough commercials selected
                return;
            }
        }
        catch (ArgumentException)
        {
            //Failure to allocate commercials
            return;
        }
        catch (Exception)
        {
            //Problem communicating with API
            NavigationManager.NavigateTo("error");
            return;
        }

        NavigationManager.NavigateTo("/");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/");
    }
}

